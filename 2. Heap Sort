Given an array of size N. The task is to sort the array elements by completing functions heapify() and buildHeap() which are used to implement Heap Sort.


Example 1:

Input:
N = 5
arr[] = {4,1,3,9,7}
Output:
1 3 4 7 9
Explanation:
After sorting elements
using heap sort, elements will be
in order as 1,3,4,7,9.
Example 2:

Input:
N = 10
arr[] = {10,9,8,7,6,5,4,3,2,1}
Output:
1 2 3 4 5 6 7 8 9 10
Explanation:
After sorting elements
using heap sort, elements will be
in order as 1, 2,3,4,5,6,7,8,9,10.


class Solution
{
    public:
    //Heapify function to maintain heap property.
    void heapify(int arr[], int n, int i)  
    {
      // Your Code Here
      
      int longest =i;
      int left_ind= 2*i+1;
      int right_ind= 2*i+2;
      
      if( left_ind<n && arr[longest]< arr[left_ind])
      {
          longest= left_ind;
      }
      if(right_ind<n && arr[longest]< arr[right_ind])
      {
          longest= right_ind;
      }
      
      if(longest!=i)
      {
          swap(arr[longest],arr[i]);
          heapify(arr,n,longest);
      }
      
    }

    public:
    //Function to build a Heap from array.
    void buildHeap(int arr[], int n)  
    { 
    // Your Code Here
    
    for(int i=n/2-1;i>=0;i--)
    {
        heapify(arr,n,i);
    }
    
    }

    
    public:
    //Function to sort an array using Heap Sort.
    void heapSort(int arr[], int n)
    {
        //code here
        buildHeap(arr,n);
        int size=n-1;
        for(int i= n-1;i>0;i--)
        {
            swap(arr[i], arr[0]);
            heapify(arr,i,0);
        }
    }
};
