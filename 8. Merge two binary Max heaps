Given two binary max heaps as arrays, merge the given heaps to form a new max heap.

 

Example 1:

Input  : 
n = 4 m = 3
a[] = {10, 5, 6, 2}, 
b[] = {12, 7, 9}
Output : 
{12, 10, 9, 2, 5, 7, 6}
Explanation :






class Solution{
    public:
    void heapify(vector<int> &arr, int n, int i)
    {
        int largest= i;
        int left  = 2*largest+1;
        int right = 2*largest+2;
            if(left<n && arr[left]>arr[largest])
            {
                largest= left;
            }
            if(right<n && arr[right]> arr[largest])
            {
                largest= right;
            }
            
            if(largest!= i)
            {
                swap(arr[largest], arr[i]);
                heapify(arr,n,largest);
            }
    }
    vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
        // your code here
        vector<int> ans;
        for(auto i=0;i<n;i++)
        {
            ans.push_back(a[i]);
        }
        for(auto i=0;i<m;i++)
        {
            ans.push_back(b[i]);
        }
        int size= ans.size();
        for(int i= size/2-1;i>=0;i--)
        {
            heapify(ans,size,i);
        }
        return ans;
        
    }
};


 
