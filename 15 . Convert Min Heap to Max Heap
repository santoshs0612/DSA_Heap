You are given an array arr of N integers representing a min Heap. The task is to convert it to max Heap.

A max-heap is a complete binary tree in which the value in each internal node is greater than or equal to the values in the children of that node. 

Example 1:

Input:
N = 4
arr = [1, 2, 3, 4]
Output:
[4, 2, 3, 1]
Explanation:

The given min Heap:

          1
        /   \
      2       3
     /
   4

Max Heap after conversion:

         4
       /   \
      3     2
    /
   1
Example 2:

Input:
N = 5
arr = [3, 4, 8, 11, 13]
Output:
[13, 11, 8, 4, 3]
Explanation:

The given min Heap:

          3
        /   \
      4      8
    /   \ 
  11     13

Max Heap after conversion:

          13
        /    \
      11      8
    /   \ 
   4     3
   
   
   
   //User function Template for C++

class Solution{
public:

    void heapify(vector<int> &arr, int N ,int ind)
    {
        int largest = ind;
        int left_ind= 2*ind+1;
        int right_ind= 2*ind+2;
        
        if(left_ind<N && arr[left_ind]> arr[largest])
        {
            largest= left_ind;
        }
        if(right_ind<N && arr[right_ind]> arr[largest])
        {
            largest= right_ind;
        }
        
        if(largest!=ind)
        {
            swap(arr[largest],arr[ind]);
            heapify(arr,N,largest);
        }
    }
    void convertMinToMaxHeap(vector<int> &arr, int N){
        
        
        
        for(int i= N/2-1;i>=0;i--)
        {
            
            heapify(arr,N,i);
        }
        
    
    }
    
};
